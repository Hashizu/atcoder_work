#!/usr/bin/env python3
import sys


def lattice(N, M):
    # 1<=a,b<=N, a+b=M
    # for i in range(1, N+1):
        # if 0 < M-i <= N:
            # return (M-i)-i+1
    if M-1<=N:
        return M-1
    else:
        i = M-N
        return (M-i)-i+1

def solve(N: int, K: int):
    # q = c+d
    ans=0
    if K<0: K*=-1
    # print(lattice(N,2))

    for q in range(2, 2*N-K+1):
        ans+=lattice(N,q)*lattice(N,q+K)
    print(ans)

    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    solve(N, K)

if __name__ == '__main__':
    main()
