#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]"):

    all_sum = sum(A)
    od_sum =sum([A[i*2] for i in range((N+1)//2)])
    a = []
    a1 = (od_sum - all_sum//2)*2
    pre = a1
    a.append(a1)
    for x in range(0,N-1):
        t = (A[x] - pre//2)*2
        a.append(t)
        pre = t

    print(*a)
    return


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
