#!/usr/bin/env python3
import sys

YES = "Yes"  # type: str
NO = "No"  # type: str

def gcd(a, b):
    while b: a, b = b, a % b
    return abs(a)

def solve(N: int, x: "List[int]", y: "List[int]"):

    for i in range(N):
        for j in range(i+1,N):
            for k in range(j+1,N):
                dx,dy   = x[i] - x[j], y[i] - y[j]
                ddx,ddy = x[i] - x[k], y[i] - y[k]
                r = (dx*ddx+dy*ddy)**2
                l = (dx*dx + dy*dy)*(ddx*ddx + ddy*ddy) 
                if (l == r):
                    print(YES)
                    return
    print(NO)    

    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    x = [int()] * (N)  # type: "List[int]"
    y = [int()] * (N)  # type: "List[int]"
    for i in range(N):
        x[i] = int(next(tokens))
        y[i] = int(next(tokens))
    solve(N, x, y)

if __name__ == '__main__':
    main()
