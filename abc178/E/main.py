#!/usr/bin/env python3
import sys


def solve(N: int, x):
    x = list(set(x))
    xs = [_[0] for _ in x]
    ys = [_[1] for _ in x]
    sum_n = [x_+y_ for x_, y_ in zip(xs, ys)]
    sum_m = [x_-y_ for (x_,y_) in zip(xs, ys)]

    a = max(max(sum_n)- min(sum_n), max(sum_m)-min(sum_m))
    print(a)
    

    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    x = [()] * (N)  # type: "List[int]"
    y = [int()] * (N)  # type: "List[int]"
    for i in range(N):
        x[i] = (int(next(tokens)),int(next(tokens)))
    solve(N, x)

if __name__ == '__main__':
    main()
