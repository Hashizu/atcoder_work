#!/usr/bin/env python3
import sys

YES = "Yes"  # type: str
NO = "No"  # type: str


def solve(N: int, A: "List[int]", B: "List[int]"):
    an = [0]*N
    bn = [0]*N
    for a in A:
        an[a-1] +=1
    for b in B:
        bn[b-1] +=1

    for i in range(N):
        an[i] = (an[i],i)
        bn[i] = (bn[i],i)
    
    if (an[0][1] == bn[0][1]) & (an[0][0]>N//2)& (bn[0][0]>N//2):
        print(NO)
        return
    
    bn_sorted = sorted(bn, key=itemgetter(0,1))
    bn_rank = [0] * N
    for i in range(N):
        # b内の出現数，bの数，b内でn番目に大きい
        bn_rank[bn_sorted[i][1]-1] = i  
    an_ranked = [0]*N
    for i in range(N):
        an_ranked[i] = (bn_rank[i],i)
    an_ranked = sorted(an_ranked, key=lambda x: (x[0], x[1]))
        
    
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    B = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A, B)

if __name__ == '__main__':
    main()
