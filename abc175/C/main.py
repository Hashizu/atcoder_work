#!/usr/bin/env python3
import sys


def solve(X: int, K: int, D: int):
    st = abs(X) - K*D    
    if abs(X) >= K*D:
        print(st)
    elif abs(X) < K*D:
        st = K*D - abs(X)
        p = st // (2*D)
        pp = st - (2*D)*p
        print(min(pp, abs(pp-(2*D))))

    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    X = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    D = int(next(tokens))  # type: int
    solve(X, K, D)

if __name__ == '__main__':
    main()
