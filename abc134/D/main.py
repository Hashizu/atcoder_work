#!/usr/bin/env python3
import sys

MOD = 2  # type: int


def solve(N: int, a: "List[int]"):

    box = [0]*N

    for x in range(N, 0, -1):
        ca = N // x
        t = 0
        for i in range(1,ca+1):
            t += box[i*x-1]
        
        if t%2 != a[x-1]:
            box[x-1] = 1

    print(sum(box))
    if sum(box) !=0:
        ans = [x for x in range(1, N+1) if box[x-1]==1]
        print(*ans)
    return


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    a = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, a)

if __name__ == '__main__':
    main()
