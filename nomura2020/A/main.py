#!/usr/bin/env python3
import sys


def solve(H: "List[int]", M: "List[int]", K: int):
    hi = 0
    m = M[1] - M[0]
    
    if m < 0:
        hi = 1
        m = m+60

    h = H[1] - H[0] - hi
    if h < 0:
        h+=24
    
    print(h*60+m-K)


    return



# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    H = [int()] * (2)  # type: "List[int]"
    M = [int()] * (2)  # type: "List[int]"
    for i in range(2):
        H[i] = int(next(tokens))
        M[i] = int(next(tokens))
    K = int(next(tokens))  # type: int
    solve(H, M, K)

if __name__ == '__main__':
    main()
