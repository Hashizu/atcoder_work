#!/usr/bin/env python3
import sys
from collections import deque, Counter


def solve(N: int, A: "List[int]"):
    d_A = Counter(A)
    s = sorted(d_A.keys())
    if s[0] == 1:
        print((d_A[1] == 1)*1)
        return
    
    is_d = [0]*(2*10**6)

    for s_t in s:
        lim = 10**6 // s_t +1
        for i in range(1,lim):
            is_d[i*s_t] +=1
    
    ans = 0
    for s_t in s:
        if (d_A[s_t] == 1) and (is_d[s_t]==1):
            ans+=1
    print(ans)


        

    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
