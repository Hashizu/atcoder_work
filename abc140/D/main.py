#!/usr/bin/env python3
import sys
import numpy as np

def solve(N: int, K: int, S: str):
    S = np.array(([(s=="L")*1 for s in S]))
    dif = S[:-1] - S[1:]
    lr = (dif==1).sum()
    rl = (dif==-1).sum()

    od = 0
    k_ = min(lr,rl) - K
    if lr != rl:
        od = 1

    if k_ + od <= 0:
        print(N-1)
    else:
        print(N-1-k_*2 -od)


    return


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    S = next(tokens)  # type: str
    solve(N, K, S)

if __name__ == '__main__':
    main()
