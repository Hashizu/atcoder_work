#!/usr/bin/env python3
import sys


def solve(N: int, p: "List[int]"):
    t = [0]*200001
    
    temp_min = 0
    for i in range(N):
        tp = p[i]
        t[tp] +=1
        if temp_min == tp:
            fl = 0
            for c in range(tp,200001):
                if t[c] == 0:
                    temp_min = c
                    fl = 1
                    break
            if fl ==0:
                temp_min = c+1
        else:
            temp_min = temp_min
        print(temp_min)


    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    p = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, p)

if __name__ == '__main__':
    main()
