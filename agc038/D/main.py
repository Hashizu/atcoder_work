#!/usr/bin/env python3
import sys

YES = "Yes"  # type: str
NO = "No"  # type: str


def solve(N: int, M: int, Q: int, A: "List[int]", B: "List[int]", C: "List[int]"):
    return


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    Q = int(next(tokens))  # type: int
    A = [int()] * (Q - 1 - 0 + 1)  # type: "List[int]"
    B = [int()] * (Q - 1 - 0 + 1)  # type: "List[int]"
    C = [int()] * (Q - 1 - 0 + 1)  # type: "List[int]"
    for i in range(Q - 1 - 0 + 1):
        A[i] = int(next(tokens))
        B[i] = int(next(tokens))
        C[i] = int(next(tokens))
    solve(N, M, Q, A, B, C)

if __name__ == '__main__':
    main()
