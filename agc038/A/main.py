#!/usr/bin/env python3
import sys
import numpy as np

def out(list2):
    for i in list2 :print(*i, sep='')

def solve(H: int, W: int, A: int, B: int):

    if ((H == 1) or (W==1)):
        if (A==B):
            out([[A]*W]*H)
        else:
            print("No")
    else:
        a = np.zeros((W,H))
        a[0:W//2][0:H//2] = 1
        a[W//2:][H//2:] = 1
        a[-1,:] = A
        a[:,-1] = B
        out(a)

    return


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    H = int(next(tokens))  # type: int
    W = int(next(tokens))  # type: int
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    solve(H, W, A, B)

if __name__ == '__main__':
    main()
