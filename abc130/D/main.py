#!/usr/bin/env python3
import sys


def solve(N: int, K: int, a: "List[int]"):

    e_ = 0
    ans = 0
    cur = a[0]
    for s in range(N):
        while((cur < K)&(e_<N-1)):
            e_ +=1
            cur += a[e_]
        if cur >=K:
            ans += N - e_
        
        cur -= a[s]

    print(ans)
    return


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    a = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, K, a)

if __name__ == '__main__':
    main()
